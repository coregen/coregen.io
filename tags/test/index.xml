<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Test | Coregen</title>
    <link>https://blog.coregen.io/tags/test/</link>
      <atom:link href="https://blog.coregen.io/tags/test/index.xml" rel="self" type="application/rss+xml" />
    <description>Test</description>
    <generator>Source Themes Academic (https://sourcethemes.com/academic/)</generator><language>en-us</language><lastBuildDate>Mon, 28 Oct 2019 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://blog.coregen.io/img/icon-32.png</url>
      <title>Test</title>
      <link>https://blog.coregen.io/tags/test/</link>
    </image>
    
    <item>
      <title>Weechat server using Ansible, Terraform and AWS</title>
      <link>https://blog.coregen.io/post/test/</link>
      <pubDate>Mon, 28 Oct 2019 00:00:00 +0000</pubDate>
      <guid>https://blog.coregen.io/post/test/</guid>
      <description>&lt;p&gt;During my first year in high-tech my go-to place for asking Programming and Linux related questions was the IRC.
Using GlowingBear and Weechat on AWS was my first choice on how to connect to the IRC (mostly because of the t2.micro anstance time qouta given by AWS free tier).
There are many articles explaining how to deploy Weechat and GlowingBear on Nginx with SSL, but frankly im a bit too lazy for this manual work, so I opted to using Ansible to deploy all my IRC stack.
&lt;strong&gt;Enter coregen.ircstack&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;One of the first things that bothered me with the deployment process was SSL. Letsencrypt does give you free SSL credentials but I wanted to take into consideration other free methods such as AWS Cloudfront.
This thinking is what initially lead me to using Ansible.
Consider this:&lt;/p&gt;

&lt;p&gt;Test&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-r&#34;&gt;hist(rnorm(100))
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
  </channel>
</rss>
